{
  "openapi": "3.0.3",
  "info": {
    "title": "theoros",
    "description": "",
    "license": {
      "name": ""
    },
    "version": "0.1.0"
  },
  "paths": {
    "/v1/calldata": {
      "get": {
        "tags": ["crate::handlers::rest::get_calldata"],
        "operationId": "get_calldata",
        "parameters": [
          {
            "name": "chain",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "feed_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Constructs the calldata used to update the specified feed IDs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCalldataResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unknown Feed ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCalldataError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/chains": {
      "get": {
        "tags": ["crate::handlers::rest::get_chains"],
        "operationId": "get_chains",
        "responses": {
          "200": {
            "description": "Get all the supported chains",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDataFeedsResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/data_feeds": {
      "get": {
        "tags": ["crate::handlers::rest::get_data_feeds"],
        "operationId": "get_data_feeds",
        "responses": {
          "200": {
            "description": "Get all the available feed ids",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDataFeedsResponse"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CalldataResponse": {
        "type": "object",
        "required": ["feed_id", "encoded_calldata"],
        "properties": {
          "encoded_calldata": {
            "type": "string"
          },
          "feed_id": {
            "type": "string"
          }
        }
      },
      "GetCalldataError": {
        "oneOf": [
          {
            "type": "string",
            "enum": ["InternalServerError"]
          },
          {
            "type": "string",
            "enum": ["DatabaseConnection"]
          },
          {
            "type": "string",
            "enum": ["InvalidFeedId"]
          },
          {
            "type": "string",
            "enum": ["DispatchNotFound"]
          },
          {
            "type": "object",
            "required": ["FeedNotFound"],
            "properties": {
              "FeedNotFound": {
                "type": "string"
              }
            }
          },
          {
            "type": "string",
            "enum": ["FailedToCreateHyperlaneClient"]
          },
          {
            "type": "string",
            "enum": ["FailedToFetchOnchainValidators"]
          },
          {
            "type": "string",
            "enum": ["ValidatorNotFound"]
          },
          {
            "type": "object",
            "required": ["ChainNotSupported"],
            "properties": {
              "ChainNotSupported": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "required": ["CalldataError"],
            "properties": {
              "CalldataError": {
                "type": "string"
              }
            }
          }
        ]
      },
      "GetCalldataQuery": {
        "type": "object",
        "required": ["chain", "feed_ids"],
        "properties": {
          "chain": {
            "type": "string"
          },
          "feed_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetChainsError": {
        "type": "string",
        "enum": ["InternalServerError"]
      },
      "GetChainsResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EvmChainName"
        }
      },
      "GetDataFeedsError": {
        "oneOf": [
          {
            "type": "object",
            "required": ["ParsingFeedId"],
            "properties": {
              "ParsingFeedId": {
                "type": "string"
              }
            }
          },
          {
            "type": "string",
            "enum": ["InternalServerError"]
          }
        ]
      },
      "GetDataFeedsResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Feed"
        }
      },
      "RpcDataFeed": {
        "type": "object",
        "required": ["feed_id", "encoded_calldata"],
        "properties": {
          "encoded_calldata": {
            "type": "string",
            "description": "The calldata binary represented as a hex string."
          },
          "feed_id": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "CalldataResponse": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["feed_id", "encoded_calldata"],
              "properties": {
                "encoded_calldata": {
                  "type": "string"
                },
                "feed_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetChainsResponse": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvmChainName"
              }
            }
          }
        }
      },
      "GetDataFeedsResponse": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Feed"
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "theoros",
      "description": "Theoros - The Pragma Consultant"
    }
  ]
}
