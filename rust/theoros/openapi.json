{
  "openapi": "3.0.3",
  "info": {
    "title": "theoros",
    "description": "",
    "license": {
      "name": ""
    },
    "version": "0.1.0"
  },
  "paths": {
    "/v1/calldata/{chain}/{feed_id}": {
      "get": {
        "tags": [
          "crate::handlers::get_calldata"
        ],
        "operationId": "get_calldata",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Constructs the calldata used to update the feed id specified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCalldataResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unknown Feed Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCalldataError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/chains": {
      "get": {
        "tags": [
          "crate::handlers::get_chains"
        ],
        "operationId": "get_chains",
        "responses": {
          "200": {
            "description": "Get all the supported chains",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDataFeedsResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/data_feeds": {
      "get": {
        "tags": [
          "crate::handlers::get_data_feeds"
        ],
        "operationId": "get_data_feeds",
        "responses": {
          "200": {
            "description": "Get all the available feed ids",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDataFeedsResponse"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetCalldataError": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "InternalServerError"
            ]
          },
          {
            "type": "string",
            "enum": [
              "DatabaseConnection"
            ]
          },
          {
            "type": "string",
            "enum": [
              "InvalidFeedId"
            ]
          },
          {
            "type": "string",
            "enum": [
              "DispatchNotFound"
            ]
          },
          {
            "type": "object",
            "required": [
              "FeedNotFound"
            ],
            "properties": {
              "FeedNotFound": {
                "type": "string"
              }
            }
          },
          {
            "type": "string",
            "enum": [
              "FailedToCreateHyperlaneClient"
            ]
          },
          {
            "type": "string",
            "enum": [
              "FailedToFetchOnchainValidators"
            ]
          },
          {
            "type": "string",
            "enum": [
              "ValidatorNotFound"
            ]
          },
          {
            "type": "object",
            "required": [
              "ChainNotSupported"
            ],
            "properties": {
              "ChainNotSupported": {
                "type": "string"
              }
            }
          }
        ]
      },
      "GetCalldataQuery": {
        "type": "object"
      },
      "GetCalldataResponse": {
        "type": "object",
        "required": [
          "calldata"
        ],
        "properties": {
          "calldata": {
            "type": "string"
          }
        }
      },
      "GetChainsError": {
        "type": "string",
        "enum": [
          "InternalServerError"
        ]
      },
      "GetChainsResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EvmChainName"
        }
      },
      "GetDataFeedsError": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "ParsingFeedId"
            ],
            "properties": {
              "ParsingFeedId": {
                "type": "string"
              }
            }
          },
          {
            "type": "string",
            "enum": [
              "InternalServerError"
            ]
          }
        ]
      },
      "GetDataFeedsResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Feed"
        }
      }
    },
    "responses": {
      "GetCalldataResponse": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "calldata"
              ],
              "properties": {
                "calldata": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetChainsResponse": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvmChainName"
              }
            }
          }
        }
      },
      "GetDataFeedsResponse": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Feed"
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "theoros",
      "description": "Theoros - The Pragma Consultant"
    }
  ]
}